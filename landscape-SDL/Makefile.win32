# The sources directory
srcdir=../../devel/gcc/landscape-SDL/src
# The install destination
installdir=../Thunder\&Lightning

# Generate target file names from source file names
SRCS=$(shell cd $(srcdir); find -name \*.cc)
OBJS=$(subst .cc,.o,$(SRCS))

# The compiler and other tools
CXX=i586-mingw32msvc-c++
LD=$(CXX)
STRIP=i586-mingw32msvc-strip
COPY=cp

# You can define additional compiler and linker flags here
#CXXFLAGS=-g
CXXFLAGS=-O3 -mcpu=i686 -march=i686 -msse -mfpmath=sse -fabi-version=1
#LDFLAGS=-fabi-version=1

SIGC_CFLAGS=-I../libsigc-install/include/sigc++-1.2 -I../libsigc-install/lib/sigc++-1.2/include
SIGC_LIBS=../libsigc-install/lib/libsigc-1.2.dll.a

IO_CFLAGS=-I../IoVM-2005-05-21/ -I../IoVM-2005-05-21/IoVM
IO_LIBS=../IoVM-2005-05-21/IoVM/_libs/libIoVM.a -lwsock32

#SDL_CFLAGS=`sdl-config --cflags`
SDL_CFLAGS=-I../SDL-1.2.7/include -I../SDL-1.2.7/include/SDL -D_REENTRANT
#SDL_LIBS=`sdl-config --libs`
SDL_LIBS=-L../SDL-1.2.7/lib/ -lmingw32 -lSDLmain -lSDL -mwindows -mconsole

AL_CFLAGS=-I../OpenAL/Include
AL_LIBS=../OpenAL/libs/ALut.lib ../OpenAL/libs/OpenAL32.lib

GL_CFLAGS=
GL_LIBS=-lopengl32

PNG_CFLAGS=-I../libpng/include -I../libz
PNG_LIBS=../libpng/lib/libpng10.a ../libz/libz.a

ALL_CXXFLAGS=$(CXXFLAGS) -I$(srcdir) $(SIGC_CFLAGS) $(IO_CFLAGS) $(SDL_CFLAGS) $(AL_CFLAGS) $(GL_CFLAGS) $(PNG_CFLAGS)
ALL_LDFLAGS=$(LDFLAGS) $(SIGC_LIBS) $(IO_LIBS) $(SDL_LIBS) $(AL_LIBS) $(GL_LIBS) $(PNG_LIBS)

all: landscape-bin.exe

.PHONY: all clean install debug

landscape-bin.exe: $(OBJS)
	@ echo Linking $@
	@ $(LD) -Wl,--allow-multiple-definition \
		-Wl,--start-group $(OBJS) -Wl,--end-group \
		$(ALL_LDFLAGS) \
		-o landscape-bin.exe

%.o:
	@ echo Compiling $@
	@ if [ ! -d $(shell dirname $@) ] ; then mkdirhier $(shell dirname $@); fi; $(CXX) -c $(ALL_CXXFLAGS) $(srcdir)/$*.cc -o $@

clean:
	@ echo Cleaning
	@ rm -f `find -name \*.o` landscape-bin.exe

install: landscape-bin.exe
	$(COPY) landscape-bin.exe $(installdir)

install-strip: install
	$(STRIP) $(installdir)/landscape-bin.exe

debug:
	@echo SRCS: $(SRCS); echo OBJS: $(OBJS)
